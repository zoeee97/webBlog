const n=JSON.parse(`{"key":"v-ea1e96a6","path":"/posts/mobile/input%E6%A1%86%E7%A6%81%E6%AD%A2%E8%BE%93%E5%85%A5%E7%A9%BA%E6%A0%BC%E4%B8%8EmacOS%E7%B3%BB%E7%BB%9F%E8%87%AA%E5%B8%A6%E8%BE%93%E5%85%A5%E6%B3%95%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98.html","title":"input框禁止输入空格与macOS系统自带输入法兼容性问题","lang":"zh-CN","frontmatter":{"date":"2023-08-16T00:00:00.000Z","category":["mobile"],"tag":["mobile"]},"headers":[],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.73,"words":220},"filePathRelative":"posts/mobile/input框禁止输入空格与macOS系统自带输入法兼容性问题.md","localizedDate":"2023年8月16日","excerpt":"<h1> input框禁止输入空格与macOS系统自带输入法兼容性问题</h1>\\n<p>之前有一个需求是要求用户不能键入空格，于是我写了如下代码。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 禁止input键入空格</span>\\n<span class=\\"token keyword\\">var</span> inputs <span class=\\"token operator\\">=</span> document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getElementsByTagName</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'input'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">.</span>prototype<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">forEach</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">call</span><span class=\\"token punctuation\\">(</span>inputs<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">input</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  input<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addEventListener</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"input\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>value <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">replace</span><span class=\\"token punctuation\\">(</span><span class=\\"token regex\\"><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-source language-regex\\">\\\\s+</span><span class=\\"token regex-delimiter\\">/</span><span class=\\"token regex-flags\\">g</span></span><span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">''</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{n as data};
