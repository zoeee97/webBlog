const e=JSON.parse('{"key":"v-2da86b2e","path":"/posts/js/js%E4%B8%AD%E9%9A%90%E5%BC%8F%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2%E4%B8%8EtoPrimitive.html","title":"js中隐式类型转换与toPrimitive","lang":"zh-CN","frontmatter":{"date":"2023-10-18T00:00:00.000Z","category":["js"],"tag":["js"]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"其他值到数值的转换规则","slug":"其他值到数值的转换规则","link":"#其他值到数值的转换规则","children":[]},{"level":2,"title":"其他值到字符串的转换规则","slug":"其他值到字符串的转换规则","link":"#其他值到字符串的转换规则","children":[]},{"level":2,"title":"其他值到布尔值的转换规则","slug":"其他值到布尔值的转换规则","link":"#其他值到布尔值的转换规则","children":[]},{"level":2,"title":"基本类型值在不同操作符的情况下隐式转换的规则","slug":"基本类型值在不同操作符的情况下隐式转换的规则","link":"#基本类型值在不同操作符的情况下隐式转换的规则","children":[]},{"level":2,"title":"toPrimitive是何方神圣","slug":"toprimitive是何方神圣","link":"#toprimitive是何方神圣","children":[]},{"level":2,"title":"valueOf和toString的返回值","slug":"valueof和tostring的返回值","link":"#valueof和tostring的返回值","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":5.02,"words":1506},"filePathRelative":"posts/js/js中隐式类型转换与toPrimitive.md","localizedDate":"2023年10月18日","excerpt":"<h1> js中隐式类型转换与toPrimitive</h1>\\n<h2> 前言</h2>\\n<p>我们知道Js的隐式类型转换主要出现在有运算符的情况下【逻辑运算符、关系运算符、算术运算符】。那么在接触toPrimitive之前，我们需要先知道其他值到某个类型值的转换规则。</p>\\n<h2> 其他值到数值的转换规则</h2>\\n<p>Boolean： true --- 1   false --- 0\\nNull：0\\nUndefined：NaN\\nString：若仅含数字，则结果跟用Number()强制转换一致，若存在非数字字符，则返回NaN\\nSymbol不能转换，会报错。</p>\\n<p><strong>对象</strong>：会先转换成其对应的原始类型值【也就是基本类型值，像undefined就是基本数据类型，它的值也是Undefined，就是基本类型值】，如果返回的是非数字的原始类型值，就根据上述规则进行类型转换。</p>"}');export{e as data};
