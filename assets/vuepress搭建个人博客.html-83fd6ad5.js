const e=JSON.parse('{"key":"v-225a3b45","path":"/posts/vue/vuepress%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html","title":"vuepress搭建个人博客","lang":"zh-CN","frontmatter":{"date":"2023-04-25T00:00:00.000Z","category":["vue相关"],"tag":["vue"]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"准备工作","slug":"准备工作","link":"#准备工作","children":[]},{"level":2,"title":"博客配置","slug":"博客配置","link":"#博客配置","children":[{"level":3,"title":"基本配置","slug":"基本配置","link":"#基本配置","children":[]}]},{"level":2,"title":"部署到GitHub Pages","slug":"部署到github-pages","link":"#部署到github-pages","children":[{"level":3,"title":"创建仓库","slug":"创建仓库","link":"#创建仓库","children":[]},{"level":3,"title":"提交代码","slug":"提交代码","link":"#提交代码","children":[]},{"level":3,"title":"设置部署分支","slug":"设置部署分支","link":"#设置部署分支","children":[]}]},{"level":2,"title":"使用deploy.sh脚本实现一键部署到GitHub Pages","slug":"使用deploy-sh脚本实现一键部署到github-pages","link":"#使用deploy-sh脚本实现一键部署到github-pages","children":[]},{"level":2,"title":"整合giscus实现评论功能","slug":"整合giscus实现评论功能","link":"#整合giscus实现评论功能","children":[]},{"level":2,"title":"最后","slug":"最后","link":"#最后","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.69,"words":1406},"filePathRelative":"posts/vue/vuepress搭建个人博客.md","localizedDate":"2023年4月25日","excerpt":"<h1> vuepress搭建个人博客</h1>\\n<h2> 前言</h2>\\n<p>市面上的博客框架有很多，鉴于vuepress是静态博客框架，可以部署到GitHub Pages而不用自己提供服务器，并且对前端也非常友好，因此我选择了vuepress，主题选用了vuepress-theme-hope。</p>\\n<h2> 准备工作</h2>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">mkdir</span> vuepress-demo\\n<span class=\\"token builtin class-name\\">cd</span> vuepress-demo\\n<span class=\\"token function\\">npm</span> init vuepress-theme-hope docs\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{e as data};
