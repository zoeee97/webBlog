import{_ as n,X as s,Y as a,Z as t}from"./framework-1e167b4e.js";const p={},o=t(`<h1 id="关于h5禁用window-open以及解决方法" tabindex="-1"><a class="header-anchor" href="#关于h5禁用window-open以及解决方法" aria-hidden="true">#</a> 关于H5禁用window.open以及解决方法</h1><h2 id="问题描述" tabindex="-1"><a class="header-anchor" href="#问题描述" aria-hidden="true">#</a> 问题描述</h2><p>之前做了一个需求，要求判断用户在点击职位列表的时候，判断用户是否登录，若未登录则直接跳转到登录页，登陆完成后自动跳转到对应的职位详情页；若已登录则直接跳转到相应职位详情页。 又因为产品要求是统一打开新窗口，因此我在pc和移动端都直接使用了window.open()。我在js里写的逻辑就是拦截了a标签的默认行为，判断登陆状态和浏览器所处环境，根据条件进而跳转到不同的页面。</p><p>在上线前的测试人员没有用真机测，只是用浏览器模拟了移动端，然后上线了才发现这个问题。也因为经验的缺乏，事前并不知道由于移动端浏览器的安全机制，会无法触发非用户行为的弹出窗口事件。</p><h2 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法" aria-hidden="true">#</a> 解决方法</h2><ol><li>创建一个a标签元素插入到文档中并用js模拟点击事件（但是我实际用不太好用）</li><li>移动端用window.location.href跳转</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 获取所有带有类名&quot;login-required&quot;的a标签</span>
  <span class="token keyword">const</span> loginRequiredLinks <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;.login-required&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 给每个需要登录的链接添加点击事件处理函数</span>
  loginRequiredLinks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">link</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    link<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> fromUrl <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">var</span> isMob <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token comment">// 如果用户未登录，则阻止a标签的默认跳转行为</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>toUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> aimurl <span class="token operator">=</span> toUrl
        <span class="token keyword">if</span> <span class="token punctuation">(</span>
            navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>
              <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span>
            <span class="token punctuation">)</span>
          <span class="token punctuation">)</span><span class="token punctuation">{</span>
            isMob <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            aimurl <span class="token operator">=</span> <span class="token string">&#39;/recruit/member/choose&#39;</span>
          <span class="token punctuation">}</span>
        <span class="token comment">// 显示吐司提示</span>
        <span class="token function">showToast</span><span class="token punctuation">(</span><span class="token string">&quot;请先登录&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 在一定时间后跳转到登录页</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// window.location.href = aimurl+\`?from=\${fromUrl}\`; // 将URL替换为实际的登录页URL</span>
          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isMob<span class="token punctuation">)</span><span class="token punctuation">{</span>
            window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>aimurl<span class="token operator">+</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">?from=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fromUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> aimurl<span class="token operator">+</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">?from=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fromUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
      <span class="token punctuation">}</span>
      <span class="token comment">// 如果用户已登录，则a标签会继续执行默认的跳转行为</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 吐司提示函数</span>
  <span class="token keyword">function</span> <span class="token function">showToast</span><span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建一个div元素作为吐司提示框</span>
    <span class="token keyword">const</span> toastDiv <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;div&gt;&lt;/div&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    toastDiv<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    toastDiv<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">&quot;toast&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 将吐司提示框添加到body中</span>
    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>toastDiv<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 设置一定时间后自动隐藏吐司提示框</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      toastDiv<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 这里设置了2秒的显示时间，可以根据需要调整显示时间</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),e=[o];function c(i,l){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","关于H5禁用window.open以及解决方法.html.vue"]]);export{r as default};
